"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 5.0.14.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_w3_y^ypmnmb*d@_$*u11et_1yd2)br+l)!-3-c8-y@b8wtb@w"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

MEDIA_URL = '/media/'                   #new
MEDIA_ROOT = BASE_DIR / 'media'


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "accounts",                 # 負責處理login page
    #"navigation",
    "django.contrib.sites",     # 這邊以下4行是安裝django-allauth需要的一些配件
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "navigation.apps.NavigationConfig",     #new
    "chat",                 #new
    "settingsapp",          #new
    "profilepage",          #new
    "match",
    'rest_framework',
    'rest_framework_simplejwt',
    'course',
    'bio',
]

SITE_ID = 1                     

AUTHENTICATION_BACKENDS = [                                 # 這邊再寫驗證使用者登入
    "django.contrib.auth.backends.ModelBackend",            # 原生django的驗證方式
    "allauth.account.auth_backends.AuthenticationBackend",  # allauth的進階登入方式 (email/google)
]

LOGIN_REDIRECT_URL = '/home/'                               # 登入成功後跳轉到home那個連結
ACCOUNT_LOGOUT_REDIRECT_URL = "/accounts/login/"            # 使用者登出之後要導向的頁面

ACCOUNT_LOGIN_METHODS = {"username"}        # 登入只需username
ACCOUNT_SIGNUP_FIELDS = ["username*", "email*", "password1*", "password2*"]     # sign up時, 這些都是要填寫的
ACCOUNT_EMAIL_VERIFICATION = "none"         # 不寄 email 驗證信（開發時用）
ACCOUNT_UNIQUE_EMAIL = True                 # 不讓別人使用相同gmail註冊多個帳號
ACCOUNT_LOGOUT_ON_GET = True                # 一按登出就登出, 不會再跳轉一個頁面
ACCOUNT_ADAPTER = "accounts.adapter.SafeSignupAdapter"
ACCOUNT_PRESERVE_USERNAME_CASING = True     # 大小寫都要一樣才可以登入
ACCOUNT_USERNAME_LOWERCASE = False
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.CustomSignupForm',
    'login': 'accounts.forms.CustomLoginForm',
    }



MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "allauth.account.middleware.AccountMiddleware",        # 要加這一行來支援多帳號登入管理, 一定要放這邊
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "django_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],       # 這行告訴django要去這個資料夾中找templates (找html files)
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "django_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


#以下程式是用來傳reset password的連結給使用者來reset的
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'noreply.crushmate@gmail.com'
EMAIL_HOST_PASSWORD = 'biew lkyv ddhl bvrx'
DEFAULT_FROM_EMAIL = 'Crushmate <noreply.crushmate@gmail.com>'

#用來同意使用此IP
ALLOWED_HOSTS = ['*']

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
    }